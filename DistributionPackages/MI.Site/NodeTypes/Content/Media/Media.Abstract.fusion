prototype(MI.Site:Content.Media.Abstract) < prototype(Neos.Neos:ContentComponent) {

    mediaType = ${q(node).property('mediaType')}
    imageSource = Sitegeist.Kaleidoscope:AssetImageSource {
        asset = ${q(node).property('image')}
    }
    videoUri = Neos.Fusion:ResourceUri {
        resource = ${q(node).property('video').resource}
    }
    videoId = ${q(node).property('videoId')}

    showMeta = ${q(node).property('showMeta')}

    showTitle = ${q(node).property('showTitle')}
    alternativeTitle = ${String.nl2br(q(node).property('alternativeTitle'))}

    showCaption = ${q(node).property('showCaption')}
    alternativeCaption = ${String.nl2br(q(node).property('alternativeCaption'))}

    showCopyright = ${q(node).property('showCopyright')}

    renderer = Neos.Fusion:Component {
        @apply.props = ${props}

        mediaTitle = Neos.Fusion:Match {
            @subject = ${props.mediaType}
            @default = ${null}
            image = ${q(node).property('image').title}
            video = ${q(node).property('video').title}
        }

        mediaCaption = Neos.Fusion:Match {
            @subject = ${props.mediaType}
            @default = ${null}
            image = ${q(node).property('image').caption}
            video = ${q(node).property('video').caption}
        }

        mediaCopyright = Neos.Fusion:Match {
            @subject = ${props.mediaType}
            @default = ${null}
            image = ${q(node).property('image').copyrightNotice}
            video = ${q(node).property('video').copyrightNotice}
        }

        renderer = afx`
            <MI.Site:Component.Molecule.Media {...props} />
        `
    }
}
