prototype(MI.Site:Component.Template.Fragment.NavigationOLD) < prototype(Neos.Fusion:Component) {
    root = ${site}
    showHome = false

    items = Neos.Fusion:Loop {
        items = Neos.Neos:MenuItems {
            entryLevel = 1
            maximumLevels = 2
        }
        itemRenderer = MI.Site:Component.Template.Fragment.NavigationOLD.Item
    }

    renderer = afx`
        <ul class="flex space-x-5">
            <MI.Site:Component.Template.Fragment.NavigationOLD.HomeItem @if.has={props.showHome} />
            {props.items}
        </ul>
    `
}

prototype(MI.Site:Component.Template.Fragment.NavigationOLD.Item) < prototype(Neos.Fusion:Component) {
    item = ${item}

    url = Neos.Neos:NodeUri {
        node = ${item.node}
    }

    label = ${item.label}

    subItems = Neos.Fusion:Loop {
        items = ${item.subItems}
        itemName = 'item'
        itemRenderer = MI.Site:Component.Template.Fragment.NavigationOLD
    }

    renderer = afx`
        <li x-data role="menuitem">
            <a
                href={props.url}
                class.main="px-4 py-3 rounded-md"
                x-bind:class={"location.pathname === '" + props.url + "' && 'bg-blue-600 text-white'"}
            >
                {props.label}
            </a>
            <ul class="navigation--default-sub" @if.has={props.subItems}>
                {props.subItems}
            </ul>
        </li>
    `
}

prototype(MI.Site:Component.Template.Fragment.NavigationOLD.HomeItem) < prototype(Neos.Fusion:Component) {
    url = Neos.Neos:NodeUri {
        node = ${site}
    }
    label = ${q(site).property('title')}

    renderer = afx`
        <li x-data role="menuitem">
            <a
                href={props.url}
                class.main="px-4 py-3 rounded-md"
                x-bind:class={"location.pathname === '" + props.url + "' && 'bg-blue-600 text-white'"}
            >
                {props.label}
            </a>
        </li>
    `
}
