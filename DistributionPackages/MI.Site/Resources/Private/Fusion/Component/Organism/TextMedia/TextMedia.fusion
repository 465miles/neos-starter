prototype(MI.Site:Component.Organism.TextMedia) < prototype(Neos.Fusion:Component) {

    @propTypes {
        @strict = true
        leadContent = ${PropTypes.string}
        titleTagName = ${PropTypes.string.isRequired}
        titleFontSize = ${PropTypes.string.isRequired}
        titleContent = ${PropTypes.string}
        textFontSize = ${PropTypes.string.isRequired}
        textContent = ${PropTypes.string.isRequired}
        mediaContent = ${PropTypes.string}
        mirrored = ${PropTypes.boolean}
        extraClass = ${PropTypes.string}
    }

    renderer = afx`
        <MI.Site:Component.Molecule.Text
            leadContent={props.leadContent}
            titleTagName={props.titleTagName}
            titleFontSize={props.titleFontSize}
            titleContent={props.titleContent}
            textFontSize={props.textFontSize}
            textColumns='1'
            textContent={props.textContent}
            gridArea={props.mirrored ? 'col-[medium-inner] lg:col-[center-right/span_large-inner-end]' : 'col-[medium-inner] lg:col-[large-inner-start/span_center-left]'}
            extraClass={props.mirrored ? 'order-last lg:pl-10' : 'order-last lg:order-first lg:pr-10'}
        />
        <div
            class.gridArea={props.mirrored ? 'col-[medium] lg:col-[large-start/span_center-left]' : 'col-[medium] lg:col-[center-right/span_large-end]'}
            class.order={props.mirrored ? 'order-first' : 'order-first lg:order-last'}
            class.spacing="mb-10 lg:mb-0"
        >
            {props.mediaContent}
        </div>

    `
}
