prototype(MI.Site:Trait.Media) < prototype(Neos.Fusion:Component) {

    mediaType = ${q(node).property('mediaType')}
    image = ${q(node).property('image')}
    video = ${q(node).property('video')}

    videoId = ${q(node).property('videoId')}

    showMeta = ${q(node).property('showMeta')}

    showTitle = ${q(node).property('showTitle')}
    alternativeTitle = ${q(node).property('alternativeTitle')}

    showCaption = ${q(node).property('showCaption')}
    alternativeCaption = ${q(node).property('alternativeCaption')}

    showCopyright = ${q(node).property('showCopyright')}

    renderer = Neos.Fusion:Component {
        @apply.props = ${props}

        imageSource = Sitegeist.Kaleidoscope:AssetImageSource {
            asset = ${props.image}
        }

        videoUri = Neos.Fusion:ResourceUri {
            resource = ${props.video.resource}
        }

        mediaMeta = Neos.Fusion:Match {
            @subject = ${props.mediaType}
            @default = ''

            image = Neos.Fusion:DataStructure {
                title = ${props.image.title}
                caption = ${props.image.caption}
                copyrightNotice = ${props.image.copyrightNotice}
            }

            video = Neos.Fusion:DataStructure {
                title = ${props.video.title}
                caption = ${props.video.caption}
                copyrightNotice = ${props.video.copyrightNotice}
            }
        }

        canRender = Neos.Fusion:Match {
            @subject = ${props.mediaType}
            @default = false
            image = ${!!props.image}
            video = ${props.video && props.image}
            video-youtube = ${!!props.videoId}
            video-vimeo = ${!!props.videoId}
        }

        renderer = afx`
            <Neos.Fusion:DataStructure
                @if={props.canRender}

                mediaType={props.mediaType}

                imageSource={props.imageSource}
                videoUri={props.videoUri}
                videoId={props.videoId}

                mediaTitle={props.alternativeTitle ? props.alternativeTitle : props.mediaMeta.title}
                mediaTitle.@if={props.showMeta && props.showTitle}

                mediaCaption={props.alternativeCaption ? props.alternativeCaption : props.mediaMeta.caption}
                mediaCaption.@if={props.showMeta && props.showCaption}

                mediaCopyright={props.mediaMeta.copyrightNotice}
                mediaCopyright.@if={props.showMeta && props.showCopyright}
            />
        `
    }
}
