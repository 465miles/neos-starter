prototype(MI.Site:Content.Media.Abstract) < prototype(Neos.Neos:ContentComponent) {

    mediaType = ${q(node).property('mediaType')}
    image = ${q(node).property('image')}
    video = ${q(node).property('video')}

    videoId = ${q(node).property('videoId')}

    showMeta = ${q(node).property('showMeta')}
    showTitle = ${q(node).property('showTitle')}
    alternativeTitle = ${q(node).property('alternativeTitle')}

    showCaption = ${q(node).property('showCaption')}
    alternativeCaption = ${q(node).property('alternativeCaption')}

    showCopyright = ${q(node).property('showCopyright')}

    renderer = Neos.Fusion:Component {
        @apply.props = ${props}

        imageSource = Sitegeist.Kaleidoscope:AssetImageSource {
            asset = ${props.image}
        }

        videoUri = Neos.Fusion:ResourceUri {
            resource = ${props.video.resource}
        }

        mediaTitle = ${props[props.mediaType].title}

        mediaCaption = ${props[props.mediaType].caption}

        mediaCopyright = ${props[props.mediaType].copyrightNotice}

        renderer = afx`
            <MI.Site:Component.Molecule.Media {...props} />
        `
    }
}
