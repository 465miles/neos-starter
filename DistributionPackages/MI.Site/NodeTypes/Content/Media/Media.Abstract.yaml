'MI.Site:Content.Media.Abstract':
  superTypes:
    'Neos.Neos:Content': true
  label: ${'Medium'}
  ui:
    label: 'Medium'
    icon: photo-video
    group: abstract
    inspector:
      groups:
        media:
          label: Medium
          icon: photo-video
          tab: default
          position: 200
        mediaMeta:
          label: Meta-Daten
          icon: info
          tab: default
          position: 210
  properties:
    mediaType:
      type: string
      defaultValue: image
      ui:
        label: 'Medientyp'
        showInCreationDialog: true
        reloadIfChanged: true
        inspector:
          group: media
          editor: 'Neos.Neos/Inspector/Editors/SelectBoxEditor'
          editorOptions:
            allowEmpty: false
            placeholder: 'Typ w√§hlen'
            values:
              image:
                label: 'Bild'
                icon: image
              video:
                label: 'Video'
                icon: film
              video-youtube:
                label: 'Youtube'
                icon: youtube
              video-vimeo:
                label: 'Vimeo'
                icon: vimeo-v
    image:
      type: 'Neos\Media\Domain\Model\ImageInterface'
      ui:
        label: 'ClientEval:({image: "Bild", video: "Video-Poster"})[node.properties.mediaType]'
        reloadIfChanged: true
        inspector:
          hidden: 'ClientEval:["image", "video"].includes(node.properties.mediaType) === false'
          group: media
    video:
      type: 'Neos\Media\Domain\Model\Asset'
      ui:
        label: 'Video'
        inspector:
          hidden: 'ClientEval:node.properties.mediaType !== "video"'
          group: media
    videoId:
      type: string
      ui:
        label: 'Video-ID'
        help:
          message: 'Video-ID von Youtube oder Vimeo.'
        inspector:
          hidden: 'ClientEval:["video-youtube", "video-vimeo"].includes(node.properties.mediaType) === false'
          group: media
    showMeta:
      type: boolean
      defaultValue: true
      ui:
        label: 'Metadaten anzeigen'
        reloadIfChanged: true
        inspector:
          group: mediaMeta
    showTitle:
      type: boolean
      defaultValue: false
      ui:
        label: 'Titel anzeigen'
        help:
          message: 'Titel aus dem Media-Module wird angezeigt wenn kein alternativer Titel vergeben wurde.'
        reloadIfChanged: true
        inspector:
          hidden: 'ClientEval:!node.properties.showMeta'
          group: mediaMeta
    alternativeTitle:
      type: 'string'
      ui:
        label: 'Alternativer Titel'
        reloadIfChanged: true
        inspector:
          hidden: 'ClientEval:!node.properties.showMeta || !node.properties.showTitle'
          group: mediaMeta
          editor: 'Neos.Neos/Inspector/Editors/TextAreaEditor'
    showCaption:
      type: boolean
      defaultValue: true
      ui:
        label: 'Beschreibung anzeigen'
        help:
          message: 'Beschreibung aus dem Media-Module wird angezeigt wenn keine alternative Beschreibung vergeben wurde.'
        reloadIfChanged: true
        inspector:
          hidden: 'ClientEval:!node.properties.showMeta'
          group: mediaMeta
    alternativeCaption:
      type: 'string'
      ui:
        label: 'Alternative Bescheibung'
        reloadIfChanged: true
        inspector:
          hidden: 'ClientEval:!node.properties.showMeta || !node.properties.showCaption'
          group: mediaMeta
          editor: 'Neos.Neos/Inspector/Editors/TextAreaEditor'
    showCopyright:
      type: boolean
      defaultValue: true
      ui:
        label: 'Copyright anzeigen'
        help:
          message: 'Copyright aus dem Media-Module wird angezeigt.'
        reloadIfChanged: true
        inspector:
          hidden: 'ClientEval:!node.properties.showMeta'
          group: mediaMeta
