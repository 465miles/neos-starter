prototype(MI.Site:Trait.Media) < prototype(Neos.Fusion:Component) {

    mediaType = ${q(node).property('mediaType')}
    image = ${q(node).property('image')}
    video = ${q(node).property('video')}

    videoId = ${q(node).property('videoId')}

    showMeta = ${q(node).property('showMeta')}

    showTitle = ${q(node).property('showTitle')}
    alternativeTitle = ${q(node).property('alternativeTitle')}

    showCaption = ${q(node).property('showCaption')}
    alternativeCaption = ${q(node).property('alternativeCaption')}

    showCopyright = ${q(node).property('showCopyright')}

    renderer = Neos.Fusion:Component {
        @apply.props = ${props}

        imageSource = Sitegeist.Kaleidoscope:AssetImageSource {
            asset = ${props.image}
        }

        videoUri = Neos.Fusion:ResourceUri {
            resource = ${props.video.resource}
        }

        mediaMeta = Neos.Fusion:DataStructure {
            @if.show = ${props.showMeta}
            @if.isImageOrVideo = ${props.mediaType == 'image' || props.mediaType == 'video'}

            title = ${props.alternativeTitle ? props.alternativeTitle : props[props.mediaType].title}
            title.@if.show = ${props.showTitle}

            caption = ${props.alternativeCaption ? props.alternativeCaption : props[props.mediaType].caption}
            caption.@if.show = ${props.showCaption}

            copyrightNotice = ${props[props.mediaType].copyrightNotice}
            copyrightNotice.@if.show = ${props.showCopyright}
        }

        canRender = Neos.Fusion:Match {
            @subject = ${props.mediaType}
            @default = false
            image = ${!!props.image}
            video = ${props.video && props.image}
            videoYoutube = ${!!props.videoId}
            videoVimeo = ${!!props.videoId}
        }

        renderer = Neos.Fusion:DataStructure {
            @if.has = ${props.canRender}

            mediaType = ${props.mediaType}
            imageSource = ${props.imageSource}
            videoUri = ${props.videoUri}
            videoId = ${props.videoId}

            mediaTitle = ${props.mediaMeta.title}
            mediaCaption = ${props.mediaMeta.caption}
            mediaCopyright = ${props.mediaMeta.copyrightNotice}
        }
    }
}
